<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Enable usage of @Autowired. -->
    <context:annotation-config/>

    <!-- Enable component scanning for defining beans with annotations. -->
    <context:component-scan base-package="net.kraklups.solarapp.model"/>

    <!--  For translating native persistence exceptions to Spring's 
          DataAccessException hierarchy. -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

	<!--  Data source. -->
	<bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean"
		p:jndiName="${dataSource.jndiName}"
		p:resourceRef="true" />

	<bean id="dataSourceProxy" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy"
		p:targetDataSource-ref="dataSource"/>

	<!-- Hibernate Session Factory -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
        p:dataSource-ref="dataSourceProxy"
        p:configLocation="classpath:/hibernate-config.xml"/>

    <!-- Transaction manager for a single Hibernate SessionFactory.  -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager"
        p:sessionFactory-ref="sessionFactory" />

	<!-- Enable the configuration of transactional behavior based on
	     annotations. -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
	<!-- Configuring RoleVoter bean to use custom access roles, by default roles should be in the form ROLE_{XXX} -->
    <bean id="roleVoter"
        class="org.springframework.security.access.vote.RoleVoter">
        <property name="rolePrefix" value=""></property>
    </bean>
 
    <bean id="accessDecisionManager"
        class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg name="decisionVoters" ref="roleVoter" />
    </bean>
    
	<security:http pattern="/resources/**" security="none"/>            
	<security:http pattern="/user/login" security="none"/>            
            
    <security:http create-session="ifRequired" auto-config="false" disable-url-rewriting="true"
    		authentication-manager-ref="dao-auth" access-decision-manager-ref="accessDecisionManager">
 		<security:intercept-url pattern="/**" access="admin,default"/>
        <security:form-login login-page="/user/login" authentication-failure-url="/user/denied"
            username-parameter="loginName" password-parameter="encryptedPassword"
            default-target-url="/" always-use-default-target="true" />
        <security:logout invalidate-session="true" logout-success-url="/user/login" logout-url="/user/j_spring_security_logout" />        
        <security:access-denied-handler error-page="/user/denied"/>        
        <security:session-management session-fixation-protection="migrateSession" invalid-session-url="/user/login">
            <security:concurrency-control max-sessions="1" expired-url="/user/login" />
        </security:session-management>
        <!--  <security:csrf />              --> 
    </security:http>    
    
	<security:authentication-manager id="dao-auth">
        <security:authentication-provider user-service-ref="userDetailsService">
        	<security:password-encoder hash="bcrypt"/>
        </security:authentication-provider>
    </security:authentication-manager>  
    
    <bean id="userDetailsService" class="net.kraklups.solarapp.model.userservice.UserServiceImpl" />  
    
    <security:authentication-manager id="in-memory-auth">
        <security:authentication-provider>
        	<security:password-encoder hash="bcrypt"/>
            <security:user-service>
                <security:user name="kraklups" password="$2a$10$TySr.M7KjWQfQlzXtXxJkePIpuK0eN5pptThBegMVt6MZwDaYjeyi" authorities="admin" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>        

</beans>
